module Register_File_tb;
reg clk = 0;              // Clock signal intialised to 0
reg RegWrite;             // Write Enabling
reg [4:0] RA1, RA2;  // Read Addresses
reg [4:0] WriteRegister;       // Write Address
reg [31:0] WriteData;      // Write Data
wire [31:0] RD1, RD2; // Read Data Outputs
always #5 clk = ~clk;
Register_File Register_File_tb_inst (
    .clk(clk), 
    .RegWrite(RegWrite), 
    .RA1(RA1),    //creates an instance of Register_File and connects its inputs/outputs.
    .RA2(RA2), 
    .WriteRegister(WriteRegister), 
    .WriteData(WriteData), 
    .RD1(RD1), 
    .RD2(RD2)
);
initial begin
   RegWrite= 1;                // Enable writing
   WriteRegister = 5'b00001;         // stores in register 1
   WriteData= 32'd12345678;     // Write data: 12345678
   #10;                    // Wait 10 time units

   RA1 = 5'b00001;         // Read from register 1
   RA2 = 5'b00001;         // it may show garbage value if this is not done
   #10;                    // Wait 10 time units

   RegWrite = 1;                // Enable writing
   WriteRegister = 5'b00010;         // stroes in register 2
   WriteData = 32'd87654321;     // Write data: 87654321
   #10;                    // Wait 10 time units

   RA1 = 5'b00010;         // Read from register 2
   RA2 = 5'b00010;
   #10;                    // Wait 10 time units

   $finish;                // End the simulation
end
initial begin
   $monitor("At time %d, RD1 = %d, RD2 = %d", $time, RD1, RD2);
end

